generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model images{
  id      String  @map("_id") @id @default(auto()) @db.ObjectId
  file_id String
  url     String
  userId  String?             @db.ObjectId @unique
  users   users?  @relation(fields:[userId] , references:[id])

}
model users{
  id        String   @map("_id") @id @default(auto()) @db.ObjectId
  name      String
  email     String               @unique
  password  String?
  following String[]
  avatar    images?
  createdAt DateTime             @default(now())
  shopReviews shopReviews[]
  updatedAt DateTime             @updatedAt
} 

model shopReviews {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      users    @relation(fields: [userId], references: [id])
  rating    Float
  reviews   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shopsId   String?  @db.ObjectId
  shops     shops?   @relation(fields: [shopsId], references: [id])
}

model shops {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  bio           String?
  category      String
  avatar        String?
  coverBanner   String?
  address       String
  opening_hours String?
  website       String?
  socialLinks   Json[]
  ratings       Float         @default(0)
  reviews       shopReviews[]
 
  sellerId      String        @unique @db.ObjectId
  sellers       sellers       @relation(fields: [sellerId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  isDeleted     Boolean       @default(false)
  deletedAt     DateTime?
  imagesId      String?       @db.ObjectId
  
}

model sellers {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String    @unique
  phone_number String
  country      String
  password     String
  stripeId     String?
  shop         shops?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isDeleted    Boolean   @default(false)
  deletedAt    DateTime?
}
model site_config {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  categories    String[]
  subCategories Json
  logo          String?
  banner        String?
}

model discount_codes{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  public_name String
  discountType String
  discountValue Float 
  discountCode  String @unique
  sellerId String @db.ObjectId
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}